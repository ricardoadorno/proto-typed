# Proto-Typed – AI Reference Guide

> Proto-Typed é uma DSL para prototipar interfaces com preview em tempo real. Esta página oferece um índice clicável e o contexto técnico necessário para que uma LLM localize a informação certa com rapidez.

## Como navegar

Todas as páginas de documentação vivem em `https://proto-typed.dev/docs/{slug}`. Os slugs são definidos em `src/utils/toc.ts` e os arquivos `.mdx` ficam em `src/docs/{slug}.mdx`.

- Cada página começa com o título e um sumário (“O que é”, “Sintaxe”, “Variações”, “Boas práticas”, “Erros comuns”, “Veja também”).
- Exemplos usam `<DslPreview>` com blocos ```dsl para garantir que o parser consiga compilar o snippet.
- As páginas Cookbook (login, dashboard etc.) usam o modelo de guia com Objetivo, Exemplo completo e Variações.
- `docs-2.md` descreve o template completo, regras de escrita e exemplos de conteúdo válido.

## Arquitetura (atalhos úteis)

- Lexer & Tokens: `src/core/lexer/tokens/*.ts`
- Parser & Builders: `src/core/parser/parser.ts`, `src/core/parser/builders`
- Renderer: `src/core/renderer/nodes/*`
- Preview HTML: `src/core/renderer/ast-to-html-string-preview.ts`
- Monaco Highlight: `src/core/editor/language/dsl-language.ts`
- TOC & navegação: `src/utils/toc.ts`, `src/app/docs/[slug]/page.tsx`

## DSL suportada (resumo rápido)

- Views: `screen`, `modal`, `drawer`
- Layouts: `container`, `container-narrow`, `container-wide`, `container-full`, `stack`, `stack-tight`, `stack-loose`, `stack-flush`, `row`, `row-start`, `row-center`, `row-between`, `row-end`, `grid-2`, `grid-3`, `grid-4`, `grid-auto`, `card`, `card-compact`, `card-feature`, `list`, `navigator`, `fab`, `---`
- Tipografia: `#` a `######`, `>`, `>>`, `>>>`, `*>`, `">`
- Botões: `@variant-size[Texto](Destino)` (variants `primary`, `secondary`, `outline`, `ghost`, `destructive`, `link`, `success`, `warning`; sizes `-xs`, `-sm`, `-md`, `-lg`)
- Links: `#[Texto](Destino)`
- Inputs inline: `___type: Label{placeholder}[opções] | atributos` (tipos oficiais `text`, `email`, `password`, `number`, `date`, `textarea`)
- Checkbox/Radio: `[X] Label`, `( ) Label`
- Componentes: `component Nome:`, `$Nome`, `$Nome: - valor1 | valor2`
- Estilos: bloco `styles:` com CSS custom properties

Tokens como `container-center`, `stack-lg`, `grid-list`, `card-p8` não existem; a documentação deve evitar ou corrigir menções a eles.

## Índice de Documentos

### Primitives

- [Text](https://proto-typed.dev/docs/text)
- [Button](https://proto-typed.dev/docs/button)
- [Input](https://proto-typed.dev/docs/input)
- [Icon](https://proto-typed.dev/docs/icon)
- [Link](https://proto-typed.dev/docs/link)

### Layouts

- [Container](https://proto-typed.dev/docs/container)
- [Stack](https://proto-typed.dev/docs/stack)
- [Row](https://proto-typed.dev/docs/row)
- [Grid](https://proto-typed.dev/docs/grid)
- [Card](https://proto-typed.dev/docs/card)
- [List](https://proto-typed.dev/docs/list)

### Views & Navigation

- [Screen](https://proto-typed.dev/docs/screen)
- [Modal](https://proto-typed.dev/docs/modal)
- [Drawer](https://proto-typed.dev/docs/drawer)
- [Navigator](https://proto-typed.dev/docs/navigator)
- [Floating Action Button (FAB)](https://proto-typed.dev/docs/fab)

### Components

- [Component Definition](https://proto-typed.dev/docs/component-definition)
- [Component Props](https://proto-typed.dev/docs/component-props)
- [Component List](https://proto-typed.dev/docs/component-list)
- [Component Composition](https://proto-typed.dev/docs/component-composition)

### Themes & Styles

- [Styles Block](https://proto-typed.dev/docs/styles-block)
- [Themes](https://proto-typed.dev/docs/themes)

### Cookbook

- [Login Screen](https://proto-typed.dev/docs/login-screen)
- [Dashboard](https://proto-typed.dev/docs/dashboard)
- [Drawer Detail](https://proto-typed.dev/docs/drawer-detail)
- [Modal Flow](https://proto-typed.dev/docs/modal-flow)
