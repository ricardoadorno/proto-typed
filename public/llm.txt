# Proto-Typed ‚Äì Guia de Navega√ß√£o para LLMs

Use este arquivo como **mapa principal da documenta√ß√£o** e refer√™ncia de estilo ao criar ou interpretar c√≥digo na linguagem **Proto-Typed DSL**.  
Antes de responder ou gerar qualquer c√≥digo, **siga as diretrizes essenciais abaixo**.  
Quando algo n√£o for conhecido ou estiver incompleto, **pesquise diretamente no link do slug correspondente em `/docs/{slug}`** antes de inferir.

---

## ‚öôÔ∏è Diretrizes Essenciais da Linguagem

### 1. Estrutura e Identa√ß√£o
- A **identa√ß√£o define a hierarquia** ‚Äî nunca use `{}` ou `end` para delimitar blocos.  
- Cada n√≠vel de aninhamento deve ser feito com **dois espa√ßos** ou **um tab**:
  ```dsl
  screen Login:
    container:
      > Email
      ___email: Email{Digite seu e-mail}
  ```
- O caractere `:` sempre indica que aquele n√≥ possui conte√∫do interno (children).

### 2. Tokens e Sintaxe
- A linguagem √© **declarativa**, n√£o program√°tica.  
- **N√£o use** s√≠mbolos como `{}`, `=`, `< >`, `;` ‚Äî eles **n√£o fazem parte da gram√°tica**.  
- Tudo deve ser **sem√¢ntico e direto**, descrevendo a interface e n√£o a l√≥gica:
  ‚úÖ `@secondary[Enviar](submit)`  
  ‚ùå `button(type = secondary, label = "Enviar")`

### 3. Sem√¢ntica de Blocos
- Blocos s√£o definidos por **prefixos e indenta√ß√£o**, **nunca por atributos**.  
- Exemplo correto:
  ```dsl
  card:
    # Usu√°rio
    > Nome: %name
  ```
  Exemplo incorreto:
  ```dsl
  card(name = "%name")  # ‚ùå n√£o suportado
  ```

### 4. Evite Atributos Arbitr√°rios
- N√£o use express√µes como `text(foo = bar)` ou `label="..."`.  
- Customiza√ß√µes s√£o declaradas por **tokens pr√≥prios da DSL**, n√£o por pares chave-valor.  
- Exemplo v√°lido:
  ```dsl
  ___password: Senha{Digite sua senha}
  ```

### 5. Layout e Fluxo
- Cada token de layout (`container:`, `row-center:`, `stack:` etc.) √© **can√¥nico** ‚Äî  
  ele j√° representa um conjunto fixo de estilos.  
- N√£o use modificadores inline (`row-w50-center-p4`).  
  Exemplo correto:
  ```dsl
  row-center:
    @primary[Ok](Submit)
  ```

### 6. Filosofia de Escrita
- Prefira **clareza √† customiza√ß√£o extrema**.  
- O c√≥digo deve parecer **uma descri√ß√£o natural de interface**, n√£o um script.  
- Sempre que poss√≠vel, busque exemplos nos links abaixo antes de criar algo novo.

---

> üß© **Resumo r√°pido:**  
> Proto-Typed √© indentado, declarativo e sem atributos arbitr√°rios.  
> Cada linha expressa uma inten√ß√£o visual e estrutural ‚Äî n√£o uma instru√ß√£o de c√≥digo.  
> Escreva como quem descreve uma interface, n√£o como quem programa uma.

---

## Passos r√°pidos

1. Comece pela p√°gina √≠ndice `/docs` para contexto geral.  
2. Cada slug listado abaixo possui o conte√∫do completo em Markdown/MDX.  
3. Priorize a se√ß√£o correspondente antes de recorrer a outras fontes externas.

---

## √çndice principal

### Sintaxe e fluxo
- [Sintaxe b√°sica](https://ricardoadorno.github.io/proto-typed/docs/syntax)
- [Telas (screen)](https://ricardoadorno.github.io/proto-typed/docs/screen)
- [Fluxo de navega√ß√£o](https://ricardoadorno.github.io/proto-typed/docs/flow)

### Primitivos de interface
- [Texto](https://ricardoadorno.github.io/proto-typed/docs/text)
- [√çcone](https://ricardoadorno.github.io/proto-typed/docs/icon)
- [Bot√£o](https://ricardoadorno.github.io/proto-typed/docs/button)
- [Campo de entrada](https://ricardoadorno.github.io/proto-typed/docs/input)
- [Link](https://ricardoadorno.github.io/proto-typed/docs/link)

### Layout e estrutura
- [Container](https://ricardoadorno.github.io/proto-typed/docs/container)
- [Stack](https://ricardoadorno.github.io/proto-typed/docs/stack)
- [Linha (row)](https://ricardoadorno.github.io/proto-typed/docs/row)
- [Grade (grid)](https://ricardoadorno.github.io/proto-typed/docs/grid)
- [Card](https://ricardoadorno.github.io/proto-typed/docs/card)
- [Lista](https://ricardoadorno.github.io/proto-typed/docs/list)

### Navega√ß√£o e intera√ß√µes
- [Navegador](https://ricardoadorno.github.io/proto-typed/docs/navigator)
- [Modal](https://ricardoadorno.github.io/proto-typed/docs/modal)
- [Drawer](https://ricardoadorno.github.io/proto-typed/docs/drawer)
- [Bot√£o flutuante (FAB)](https://ricardoadorno.github.io/proto-typed/docs/fab)

### Componentes e reuso
- [Defini√ß√£o de componente](https://ricardoadorno.github.io/proto-typed/docs/component-definition)
- [Propriedades de componente](https://ricardoadorno.github.io/proto-typed/docs/component-props)
- [Lista de componentes](https://ricardoadorno.github.io/proto-typed/docs/component-list)
- [Composi√ß√£o de componentes](https://ricardoadorno.github.io/proto-typed/docs/component-composition)

### Temas e estilos
- [Temas](https://ricardoadorno.github.io/proto-typed/docs/themes)

### Padr√µes e boas pr√°ticas
- [Nomea√ß√£o e consist√™ncia](https://ricardoadorno.github.io/proto-typed/docs/naming)
- [Diretrizes de composi√ß√£o](https://ricardoadorno.github.io/proto-typed/docs/composition-guidelines)
- [Erros comuns](https://ricardoadorno.github.io/proto-typed/docs/error-patterns)

### Exemplos
- [Tela de login](https://ricardoadorno.github.io/proto-typed/docs/login-screen)
- [Dashboard](https://ricardoadorno.github.io/proto-typed/docs/dashboard)
- [Detalhe no drawer](https://ricardoadorno.github.io/proto-typed/docs/drawer-detail)
- [Fluxo com modal](https://ricardoadorno.github.io/proto-typed/docs/modal-flow)
- [Listagem de cards](https://ricardoadorno.github.io/proto-typed/docs/list-cards)

---

## Observa√ß√µes r√°pidas

- Todos os exemplos de c√≥digo usam blocos ` ```dsl `.  
- Mantenha a resposta focada, coerente com a DSL, e **referencie explicitamente o slug relevante**.  
- Se houver d√∫vida ou incerteza, **pesquise primeiro nos links acima** antes de criar infer√™ncias.
