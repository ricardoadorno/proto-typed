{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Proto-Typed",
  "scopeName": "source.pty",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#entities"
    },
    {
      "include": "#constants"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.ptd",
          "match": "//.*"
        },
        {
          "name": "comment.block.ptd",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.ptd",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.ptd",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.ptd",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.ptd",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.ptd",
          "match": "\\b(screen|component|styles|colors|fonts|spacing|fontSizes|radii|breakpoints|theme|layout|element|properties|variants|events|actions|navigation|data|state|import|export|const|let|var|if|else|for|while|return|function|new|true|false|null|undefined|this|of|in|as|from|select|case|default|switch|try|catch|finally|throw|debugger|with|delete|typeof|instanceof|void)\\b"
        }
      ]
    },
    "entities": {
      "patterns": [
        {
          "name": "entity.name.function.ptd",
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*(?=\\()"
        },
        {
          "name": "entity.name.type.ptd",
          "match": "\\b([A-Z][a-zA-Z0-9_]*)"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.numeric.ptd",
          "match": "\\b[0-9]+(\\.[0-9]+)?\\b"
        }
      ]
    }
  }
}
